Index: code/QRGame/app/src/main/java/com/example/qrgame/MainPageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.qrgame;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.location.LocationRequest;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\nimport com.google.firebase.firestore.CollectionReference;\r\n\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\n\r\nimport com.google.android.gms.common.api.GoogleApiClient;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.Marker;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.UUID;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\n\r\npublic class MainPageActivity extends AppCompatActivity implements OnMapReadyCallback {\r\n    LocationManager locationManager;\r\n    String latitude, longitude;\r\n    private static final int REQUEST_LOCATION = 1;\r\n    GoogleMap mGoogleMap;\r\n    private ArrayList<LatLng> locationArrayList;\r\n    private ArrayList<String> locationnameArrayList;\r\n    private ArrayList<Float> distanceList;\r\n    private ArrayList<Float> distanceList10;\r\n    private FloatingActionButton addQr_button;\r\n    private Button inventory_button;\r\n    private Button search_button;\r\n    private Button social_button;\r\n    private Button logout_button;\r\n    FirebaseFirestore firebaseDatabase;\r\n    private final int QR_SCANNER_REQUEST = 0;\r\n    // Name and face of MissingNo\r\n    private final String MISSINGNONAME = \"MissingNo\";\r\n    private final String MISSINGNOFACE = \"   |-------|\\n   |       |\\n   |       |\\n   |       |\\n\" +\r\n            \"|          |\\n|          |\\n|          |\\n|----------|\";\r\n    private String currUser;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        locationArrayList = new ArrayList<>();\r\n        locationnameArrayList = new ArrayList<>();\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.main_page);\r\n        logout_button = findViewById(R.id.logout_button);\r\n        currUser = (String) getIntent().getStringExtra(\"Username\");\r\n\r\n        search_button = findViewById(R.id.search);\r\n        search_button.setOnClickListener(v -> {\r\n            new Map().show(getSupportFragmentManager(), \"Search QRCode\");\r\n        });\r\n        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager().findFragmentById(R.id.mMap);\r\n        mapFragment.getMapAsync(this);\r\n        Intent login_page = new Intent(this, LogIn.class);\r\n        String deviceId = getUdid();\r\n        ActivityCompat.requestPermissions(this,\r\n                new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n        locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\r\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            OnGPS();\r\n        } else {\r\n            getLocation();\r\n        }\r\n\r\n        logout_button.setOnClickListener(view -> {\r\n            FirebaseFirestore fireStore = FirebaseFirestore.getInstance();\r\n\r\n            fireStore.collection(\"LoginUser\").document(deviceId).delete();\r\n            startActivity(login_page);\r\n        });\r\n        addQr_button = findViewById(R.id.add_qr);\r\n        Intent qr_scanner = new Intent(this, QRScannerActivity.class);\r\n        // Player chose to add a QR code\r\n        addQr_button.setOnClickListener(view -> startActivityForResult(qr_scanner, QR_SCANNER_REQUEST));\r\n        inventory_button = findViewById(R.id.inventory_button);\r\n        Intent inventory = new Intent(MainPageActivity.this, Inventory_activity.class);\r\n        inventory.putExtra(\"Username\", currUser);\r\n        inventory_button.setOnClickListener(view -> startActivity(inventory));\r\n        social_button = findViewById(R.id.social_button);\r\n        social_button.setOnClickListener(view -> {\r\n            Intent social_page = new Intent(MainPageActivity.this, Social.class);\r\n            startActivity(social_page);\r\n        });\r\n    }\r\n\r\n    private void OnGPS() {\r\n        final AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(\"Enable GPS\").setCancelable(false).setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                startActivity(new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));\r\n            }\r\n        }).setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        final AlertDialog alertDialog = builder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    private LatLng getLocation() {\r\n        LatLng Current = null;\r\n        if (ActivityCompat.checkSelfPermission(\r\n                MainPageActivity.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                MainPageActivity.this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n        } else {\r\n            Location locationGPS = locationManager.getLastKnownLocation(LocationManager.GPS_PROVIDER);\r\n            if (locationGPS != null) {\r\n                double lat = locationGPS.getLatitude();\r\n                double longi = locationGPS.getLongitude();\r\n                latitude = String.valueOf(lat);\r\n                longitude = String.valueOf(longi);\r\n                Current = new LatLng(Double.parseDouble(latitude), Double.parseDouble(longitude));\r\n                locationArrayList.add(Current);\r\n\r\n            } else {\r\n                Toast.makeText(this, \"Unable to find location.\", Toast.LENGTH_SHORT).show();\r\n                Current = new LatLng(0,0);\r\n            }\r\n        }\r\n        return Current;\r\n    }\r\n\r\n    // Handles activities that return with a result\r\n    private String hash;\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent result) {\r\n        super.onActivityResult(requestCode, resultCode, result);\r\n\r\n        // A scanner activity was called and finished here\r\n        if (requestCode == QR_SCANNER_REQUEST) {\r\n            if (resultCode == RESULT_OK) {\r\n                if (result != null) {\r\n                    hash = result.getStringExtra(\"result\");\r\n                } else {\r\n                    // If the QR code did not have any data, a generic QR code is displayed\r\n                    MISSINGNO();\r\n                }\r\n                showInfo();\r\n\r\n            } else if (resultCode == RESULT_CANCELED) {\r\n                // If the user cancelled the scanner, the default QR code is displayed\r\n                if (!TestingMode.testingMode) {\r\n                    MISSINGNO();\r\n                } else {\r\n                    // Used for unit tests\r\n                    currUser = TestingMode.testUser;\r\n                    hash = TestingMode.hash;\r\n                    showInfo();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Shows details of scanned QR codes\r\n     */\r\n    private void showInfo() {\r\n        // Get instance of the database\r\n        QRDatabaseController dbAdapter = QRDatabaseController.getInstance();\r\n        /*\r\n        Find the QR code and perform actions based on if it exists\r\n        LOOK HERE FOR EXAMPLE OF DATABASE\r\n        */\r\n        dbAdapter.findQR(hash, qrExists -> {\r\n            Log.d(\"TestQR\", String.valueOf(qrExists));\r\n            if (qrExists) {\r\n                // If the QR code exists, the code is retrieved from the database and\r\n                // updated\r\n\r\n                dbAdapter.getQRCode(hash, qrCode -> {\r\n                    Intent qrInfoIntent = new Intent(MainPageActivity.this, ExistingQRInfoActivity.class);\r\n                    boolean alreadyScanned = true;\r\n                    // If the user has not scanned the QR code yet, they are added to the\r\n                    // user list\r\n                    if (!(qrCode.getUsers()).contains(currUser)) {\r\n                        qrCode.addUsers(currUser);\r\n                        alreadyScanned = false;\r\n                    }\r\n\r\n                    qrInfoIntent.putExtra(\"qrCode\", qrCode);\r\n                    qrInfoIntent.putExtra(\"Username\", currUser);\r\n                    qrInfoIntent.putExtra(\"scanned\", alreadyScanned);\r\n                    // Display the QR code information\r\n                    startActivity(qrInfoIntent);\r\n                });\r\n\r\n            } else {\r\n                // If the QR code does not exist yet, a new one is created\r\n                Intent newQRCodeInfoIntent = new Intent(MainPageActivity.this, NewQRInfoActivity.class);\r\n                newQRCodeInfoIntent.putExtra(\"Username\", currUser);\r\n\r\n                // Get current location for if the user wants to save it with the QR code\r\n                LatLng currLocation = getLocation();\r\n                newQRCodeInfoIntent.putExtra(\"latitude\", (Double) currLocation.latitude);\r\n                newQRCodeInfoIntent.putExtra(\"longitude\", (Double) currLocation.longitude);\r\n\r\n                // New QR code is created and the user is added to the user list\r\n                QRCode qrCode = new QRCode(hash);\r\n                qrCode.addUsers(currUser);\r\n                newQRCodeInfoIntent.putExtra(\"qrCode\", qrCode);\r\n\r\n                // Display the QR code information\r\n                startActivity(newQRCodeInfoIntent);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Used for when a QR code does not exist. Generates a QR code worth 0 points\r\n     * called MissingNo\r\n     */\r\n    private void MISSINGNO() {\r\n        // MissingNo has a hash of '0'\r\n        hash = \"0\";\r\n        QRCode qrCode = new QRCode(0, hash, MISSINGNONAME, MISSINGNOFACE,\r\n                0, 0, new ArrayList<>(), new HashMap<String, String>(), \"\");\r\n\r\n        Intent qrInfoIntent = new Intent(MainPageActivity.this,\r\n                ExistingQRInfoActivity.class);\r\n        qrInfoIntent.putExtra(\"qrCode\", qrCode);\r\n        qrInfoIntent.putExtra(\"Username\", currUser);\r\n        qrInfoIntent.putExtra(\"scanned\", true);\r\n\r\n        startActivity(qrInfoIntent);\r\n    }\r\n\r\n    /**\r\n     * return the AndroidID\r\n     *\r\n     * @return\r\n     */\r\n    public String AndroidID() {\r\n        String id = Settings.Secure.getString(getContentResolver(), Settings.Secure.ANDROID_ID);\r\n        return id == null ? \"\" : id;\r\n    }\r\n\r\n    /**\r\n     * return the deviceId\r\n     *\r\n     * @return\r\n     */\r\n    public String getUdid() {\r\n        String androidID = AndroidID();\r\n        return \"2\" + UUID.nameUUIDFromBytes(androidID.getBytes()).toString().replace(\"-\", \"\");\r\n    }\r\n\r\n    public void onMapReady(@NonNull GoogleMap googleMap) {\r\n        firebaseDatabase = FirebaseFirestore.getInstance();\r\n        CollectionReference test_value = firebaseDatabase.collection(\"qrCodes\");\r\n        mGoogleMap = googleMap;\r\n        locationnameArrayList.add(\"current\");\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }\r\n        mGoogleMap.setMyLocationEnabled(true);\r\n        test_value\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @SuppressLint(\"RestrictedApi\")\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n\r\n                        if (task.isSuccessful()) {\r\n                            List<Float> lists = new ArrayList<Float>();\r\n                            List<Float> lists1 = new ArrayList<Float>();\r\n                            for (DocumentSnapshot document : task.getResult().getDocuments()) {\r\n                                String test = \"test\";//\"(String) document.get(\"latLng\");\"\"\r\n                                test += document.get(\"latLng\");\r\n                                String[] temp;\r\n                                String[] temp1;\r\n                                String[] lat;\r\n                                String lot;\r\n                                String delimeter = \"=\";\r\n                                String delimeter1 = \",\";\r\n                                temp = test.split(delimeter);\r\n                                temp1 = temp[1].split(delimeter1);\r\n                                lat = temp1[0].split(\",\");\r\n                                String lata = lat[0];\r\n                                lot = temp[2].substring(0,temp[2].length()-1);\r\n                                LatLng qrcode = new LatLng(Double.valueOf(lata),Double.valueOf(lot));\r\n                                locationnameArrayList.add(document.getString(\"name\"));\r\n                                //Toast.makeText(MainPageActivity.this, document.getString(\"name\") , Toast.LENGTH_SHORT).show();\r\n                                locationArrayList.add(qrcode);\r\n                            }\r\n                            distanceList = new ArrayList<>();\r\n                            distanceList10 = new ArrayList<>();\r\n                            for (int i = 1; i < locationArrayList.size() - 1; i++) {\r\n                                LatLng loc1 = locationArrayList.get(i);\r\n                                LatLng loc2 = locationArrayList.get(0);\r\n                                float[] distanceResult = new float[1];\r\n                                Location.distanceBetween(loc1.latitude, loc1.longitude, loc2.latitude, loc2.longitude, distanceResult);\r\n                                float distanceInMeters = distanceResult[0];\r\n                                lists.add(distanceInMeters);\r\n\r\n                            }\r\n                            Collections.sort(lists);\r\n                            if (lists.size() > 9) {\r\n                                lists1 = lists.subList(0, 10);\r\n                            } else {\r\n                                lists1 = lists;\r\n                            }\r\n//                            lists1 = lists;\r\n\r\n                            for (int i = 1; i < locationArrayList.size() - 1; i++) {\r\n                                LatLng loc1 = locationArrayList.get(i);\r\n                                LatLng loc2 = locationArrayList.get(0);\r\n                                float[] distanceResult = new float[1];\r\n                                Location.distanceBetween(loc1.latitude, loc1.longitude, loc2.latitude, loc2.longitude, distanceResult);\r\n                                float distanceInMeters = distanceResult[0];\r\n                                if (lists1.contains(distanceInMeters)) {\r\n                                    googleMap.addMarker(new MarkerOptions().position(locationArrayList.get(i)).title(locationnameArrayList.get(i)));\r\n                                    googleMap.animateCamera(CameraUpdateFactory.zoomTo(18.0f));\r\n                                    // below line is use to move our camera to the specific location.\r\n                                    googleMap.moveCamera(CameraUpdateFactory.newLatLng(locationArrayList.get(i)));\r\n                                }\r\n                            }\r\n                            ActivityCompat.requestPermissions(MainPageActivity.this,\r\n                                    new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n                            locationManager = (LocationManager) getSystemService(Context.LOCATION_SERVICE);\r\n                        } else {\r\n                            Toast.makeText(MainPageActivity.this, \"Unable to connect to database\" , Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/QRGame/app/src/main/java/com/example/qrgame/MainPageActivity.java b/code/QRGame/app/src/main/java/com/example/qrgame/MainPageActivity.java
--- a/code/QRGame/app/src/main/java/com/example/qrgame/MainPageActivity.java	(revision 462cbf14e096023ee19dfbc5dbf6e7e57d817b33)
+++ b/code/QRGame/app/src/main/java/com/example/qrgame/MainPageActivity.java	(date 1680245206917)
@@ -65,6 +65,7 @@
     private Button search_button;
     private Button social_button;
     private Button logout_button;
+    private Button search_Latlng_button;
     FirebaseFirestore firebaseDatabase;
     private final int QR_SCANNER_REQUEST = 0;
     // Name and face of MissingNo
@@ -81,7 +82,10 @@
         setContentView(R.layout.main_page);
         logout_button = findViewById(R.id.logout_button);
         currUser = (String) getIntent().getStringExtra("Username");
-
+        search_Latlng_button = findViewById(R.id.searchlatLng);
+        search_Latlng_button.setOnClickListener(v -> {
+            new LatlngSearch().show(getSupportFragmentManager(), "Search QRCode");
+        });
         search_button = findViewById(R.id.search);
         search_button.setOnClickListener(v -> {
             new Map().show(getSupportFragmentManager(), "Search QRCode");
Index: code/QRGame/.idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/code/QRGame/.idea/deploymentTargetDropDown.xml b/code/QRGame/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/code/QRGame/.idea/deploymentTargetDropDown.xml	(revision 462cbf14e096023ee19dfbc5dbf6e7e57d817b33)
+++ /dev/null	(revision 462cbf14e096023ee19dfbc5dbf6e7e57d817b33)
@@ -1,17 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <runningDeviceTargetSelectedWithDropDown>
-      <Target>
-        <type value="RUNNING_DEVICE_TARGET" />
-        <deviceKey>
-          <Key>
-            <type value="SERIAL_NUMBER" />
-            <value value="988a98354632464b35" />
-          </Key>
-        </deviceKey>
-      </Target>
-    </runningDeviceTargetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2023-03-31T02:39:39.812262600Z" />
-  </component>
-</project>
\ No newline at end of file
Index: code/QRGame/app/src/main/java/com/example/qrgame/Map.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.example.qrgame;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.DialogFragment;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.GeoPoint;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\n\r\npublic class Map extends DialogFragment {\r\n    private Context mContext;\r\n    FirebaseFirestore firebaseDatabase;\r\n    private String currUser;\r\n    private String value;\r\n    private GeoPoint loc;\r\n    private int temp;\r\n//    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n\r\n\r\n    @SuppressLint(\"MissingInflatedId\")\r\n    @NonNull\r\n    @Override\r\n    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\r\n        temp = 0;\r\n        mContext = getContext();\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        firebaseDatabase = FirebaseFirestore.getInstance();\r\n        CollectionReference test_value = firebaseDatabase.collection(\"qrCodes\");\r\n        //currUser = (String) getIntent().getStringExtra(\"Username\");\r\n\r\n        View view = LayoutInflater.from(getContext()).inflate(R.layout.map, null);\r\n        EditText la = view.findViewById(R.id.latitude);\r\n\r\n        return builder\r\n                .setView(view)\r\n                .setTitle(\"Search QRCode by name\")\r\n                .setNegativeButton(\"Cancel\", null)\r\n                .setPositiveButton(\"Search\", (dialog, which) -> {\r\n                    String lat = la.getText().toString();\r\n                    //String lot = lo.getText().toString();\r\n                    //GeoPoint loc1 = new GeoPoint(Double.parseDouble(lat), Double.parseDouble(lot));\r\n                    //Toast.makeText(Map.this.getContext(), lat, Toast.LENGTH_SHORT).show();\r\n\r\n                    //AlertDialog.Builder builder = new AlertDialog.Builder(getContext());\r\n                    test_value\r\n                            .get()\r\n                            .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                @SuppressLint(\"RestrictedApi\")\r\n                                @Override\r\n                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n\r\n                                    if (task.isSuccessful()) {\r\n                                        for (DocumentSnapshot document : task.getResult().getDocuments()) {\r\n                                            //value = String.valueOf(task.getResult().getDocuments().get(0).getString(\"name\"));\r\n\r\n                                            value = document.getString(\"name\");\r\n                                            //value += document.get(\"latLng\");\r\n                                            //Toast.makeText(mContext, value , Toast.LENGTH_SHORT).show();\r\n                                            //value += \" location: \";\r\n//                                        GeoPoint loc1 = new GeoPoint(Double.parseDouble(lat), Double.parseDouble(lot));\r\n                                            if (value.equals(lat)) {\r\n                                                //Intent qrInfoIntent = new Intent(mContext, ExistingQRInfoActivity.class);\r\n//                                                qrInfoIntent.putExtra(\"qrCode\", qrCode);\r\n//                                                qrInfoIntent.putExtra(\"Username\", currUser);\r\n//                                                qrInfoIntent.putExtra(\"scanned\", alreadyScanned);\r\n                                                // Display the QR code information\r\n                                                //Intent qrInfoIntent = new Intent(mContext, ExistingQRInfoActivity.class);\r\n                                                //requireActivity().startActivity(qrInfoIntent);\r\n                                                Toast.makeText(mContext, lat + \" is found , its score is\" + document.getDouble(\"score\"), Toast.LENGTH_SHORT).show();\r\n                                                temp = 1;\r\n\r\n//                                                if (Map.this.getContext() != null) {\r\n//                                                    Toast.makeText(Map.this.getContext(), lat + \"finded\", Toast.LENGTH_SHORT).show();\r\n//                                                } else {\r\n//                                                    Log.e(\"Map\", \"Context is null\");\r\n//                                                }\r\n\r\n                                            }\r\n\r\n                                            //value += document.getString(\"location_test_string\");Hallowed Bleismita\r\n                                            //Toast.makeText(Map.this.getContext(), value, Toast.LENGTH_SHORT).show();Industrious Tryedeght\r\n                                        }\r\n                                        if (temp == 0){\r\n                                            Toast.makeText(mContext, lat + \" is not found \", Toast.LENGTH_SHORT).show();\r\n                                        }\r\n//                            Intent intent = new Intent(Map.this.getContext(), Activity.class);\r\n//                            intent.putExtra(\"name\",task.getResult().getDocuments().get(0).getString(\"name\"));\r\n//                            startActivity(intent);\r\n\r\n\r\n                                    } else {\r\n//                            Log.d(TAG, \"Error getting documents: \", task.getException());\r\n                                    }\r\n                                }\r\n//                            });\r\n\r\n\r\n                            });\r\n                    //Toast.makeText(mContext, value + \"finded\", Toast.LENGTH_SHORT).show();\r\n\r\n                })\r\n                .create();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/QRGame/app/src/main/java/com/example/qrgame/Map.java b/code/QRGame/app/src/main/java/com/example/qrgame/Map.java
--- a/code/QRGame/app/src/main/java/com/example/qrgame/Map.java	(revision 462cbf14e096023ee19dfbc5dbf6e7e57d817b33)
+++ b/code/QRGame/app/src/main/java/com/example/qrgame/Map.java	(date 1680253042357)
@@ -49,22 +49,17 @@
     FirebaseFirestore firebaseDatabase;
     private String currUser;
     private String value;
-    private GeoPoint loc;
-    private int temp;
-//    AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
-
+    private int ctemp;
 
     @SuppressLint("MissingInflatedId")
     @NonNull
     @Override
     public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
-        temp = 0;
+        ctemp = 0;
         mContext = getContext();
         AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
         firebaseDatabase = FirebaseFirestore.getInstance();
         CollectionReference test_value = firebaseDatabase.collection("qrCodes");
-        //currUser = (String) getIntent().getStringExtra("Username");
-
         View view = LayoutInflater.from(getContext()).inflate(R.layout.map, null);
         EditText la = view.findViewById(R.id.latitude);
 
@@ -73,12 +68,7 @@
                 .setTitle("Search QRCode by name")
                 .setNegativeButton("Cancel", null)
                 .setPositiveButton("Search", (dialog, which) -> {
-                    String lat = la.getText().toString();
-                    //String lot = lo.getText().toString();
-                    //GeoPoint loc1 = new GeoPoint(Double.parseDouble(lat), Double.parseDouble(lot));
-                    //Toast.makeText(Map.this.getContext(), lat, Toast.LENGTH_SHORT).show();
-
-                    //AlertDialog.Builder builder = new AlertDialog.Builder(getContext());
+                    String name = la.getText().toString();
                     test_value
                             .get()
                             .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
@@ -88,53 +78,35 @@
 
                                     if (task.isSuccessful()) {
                                         for (DocumentSnapshot document : task.getResult().getDocuments()) {
-                                            //value = String.valueOf(task.getResult().getDocuments().get(0).getString("name"));
-
                                             value = document.getString("name");
-                                            //value += document.get("latLng");
-                                            //Toast.makeText(mContext, value , Toast.LENGTH_SHORT).show();
-                                            //value += " location: ";
-//                                        GeoPoint loc1 = new GeoPoint(Double.parseDouble(lat), Double.parseDouble(lot));
-                                            if (value.equals(lat)) {
-                                                //Intent qrInfoIntent = new Intent(mContext, ExistingQRInfoActivity.class);
-//                                                qrInfoIntent.putExtra("qrCode", qrCode);
-//                                                qrInfoIntent.putExtra("Username", currUser);
-//                                                qrInfoIntent.putExtra("scanned", alreadyScanned);
-                                                // Display the QR code information
-                                                //Intent qrInfoIntent = new Intent(mContext, ExistingQRInfoActivity.class);
-                                                //requireActivity().startActivity(qrInfoIntent);
-                                                Toast.makeText(mContext, lat + " is found , its score is" + document.getDouble("score"), Toast.LENGTH_SHORT).show();
-                                                temp = 1;
-
-//                                                if (Map.this.getContext() != null) {
-//                                                    Toast.makeText(Map.this.getContext(), lat + "finded", Toast.LENGTH_SHORT).show();
-//                                                } else {
-//                                                    Log.e("Map", "Context is null");
-//                                                }
-
+                                            if (value.equals(name)) {
+                                                String test = "test";//"(String) document.get("latLng");""
+                                                test += document.get("latLng");
+                                                String[] temp;
+                                                String[] temp1;
+                                                String[] lat;
+                                                String lot;
+                                                String delimeter = "=";
+                                                String delimeter1 = ",";
+                                                temp = test.split(delimeter);
+                                                temp1 = temp[1].split(delimeter1);
+                                                lat = temp1[0].split(",");
+                                                String lata = lat[0];
+                                                lot = temp[2].substring(0,temp[2].length()-1);
+                                                LatLng qrcode = new LatLng(Double.valueOf(lata),Double.valueOf(lot));
+                                                Toast.makeText(mContext, name + " is found , it is located at " + qrcode.toString(), Toast.LENGTH_SHORT).show();
+                                                ctemp = 1;
                                             }
-
-                                            //value += document.getString("location_test_string");Hallowed Bleismita
-                                            //Toast.makeText(Map.this.getContext(), value, Toast.LENGTH_SHORT).show();Industrious Tryedeght
                                         }
-                                        if (temp == 0){
-                                            Toast.makeText(mContext, lat + " is not found ", Toast.LENGTH_SHORT).show();
+                                        if (ctemp == 0){
+                                            Toast.makeText(mContext, name + " is not found ", Toast.LENGTH_SHORT).show();
                                         }
-//                            Intent intent = new Intent(Map.this.getContext(), Activity.class);
-//                            intent.putExtra("name",task.getResult().getDocuments().get(0).getString("name"));
-//                            startActivity(intent);
-
 
                                     } else {
-//                            Log.d(TAG, "Error getting documents: ", task.getException());
+                                        Toast.makeText(mContext, "Database load error", Toast.LENGTH_SHORT).show();
                                     }
                                 }
-//                            });
-
-
                             });
-                    //Toast.makeText(mContext, value + "finded", Toast.LENGTH_SHORT).show();
-
                 })
                 .create();
     }
Index: code/QRGame/app/src/main/res/layout/main_page.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <androidx.fragment.app.FragmentContainerView\r\n        android:id=\"@+id/mMap\"\r\n        android:name=\"com.google.android.gms.maps.SupportMapFragment\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"440dp\" />\r\n\r\n    <com.google.android.gms.maps.MapView\r\n        android:id=\"@+id/mapView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"1\"\r\n        android:background=\"@color/white\" />\r\n    <Button\r\n        android:id=\"@+id/search\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Search\" />\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"105dp\"\r\n        android:background=\"@color/teal_200\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/inventory_button\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@drawable/button_shape\"\r\n            android:text=\"Inventory\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/add_qr\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.29\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/social_button\"\r\n            android:layout_width=\"130dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_weight=\"1\"\r\n            android:background=\"@drawable/button_shape\"\r\n            android:text=\"Social\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.508\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/add_qr\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.29\" />\r\n\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/add_qr\"\r\n            android:layout_width=\"60dp\"\r\n            android:layout_height=\"60dp\"\r\n            android:layout_weight=\"1\"\r\n            android:backgroundTint=\"@color/white\"\r\n            android:clickable=\"true\"\r\n            android:foreground=\"@drawable/ic_code_scanner_auto_focus_off\"\r\n            android:foregroundGravity=\"center\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0.0\" />\r\n\r\n\r\n        <Button\r\n            android:id=\"@+id/logout_button\"\r\n            android:layout_width=\"100dp\"\r\n            android:layout_height=\"40dp\"\r\n            android:layout_marginTop=\"12dp\"\r\n            android:background=\"@drawable/button_shape\"\r\n            android:text=\"Log out\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.498\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/add_qr\" />\r\n\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/QRGame/app/src/main/res/layout/main_page.xml b/code/QRGame/app/src/main/res/layout/main_page.xml
--- a/code/QRGame/app/src/main/res/layout/main_page.xml	(revision 462cbf14e096023ee19dfbc5dbf6e7e57d817b33)
+++ b/code/QRGame/app/src/main/res/layout/main_page.xml	(date 1680244690610)
@@ -9,7 +9,7 @@
         android:id="@+id/mMap"
         android:name="com.google.android.gms.maps.SupportMapFragment"
         android:layout_width="match_parent"
-        android:layout_height="440dp" />
+        android:layout_height="500dp" />
 
     <com.google.android.gms.maps.MapView
         android:id="@+id/mapView"
@@ -17,11 +17,30 @@
         android:layout_height="wrap_content"
         android:layout_weight="1"
         android:background="@color/white" />
+
+    <LinearLayout
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center_horizontal"
+        android:orientation="horizontal">
+
     <Button
         android:id="@+id/search"
-        android:layout_width="match_parent"
+        android:layout_below="@+id/image"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginRight="5dp"
+        android:text="Search Name" />
+
+    <Button
+        android:id="@+id/searchlatLng"
+        android:layout_below="@+id/image"
+        android:layout_width="wrap_content"
         android:layout_height="wrap_content"
-        android:text="Search" />
+        android:layout_marginLeft="5dp"
+
+        android:text="Search lat" />
+    </LinearLayout>
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
Index: code/QRGame/app/src/main/java/com/example/qrgame/LatlngSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/QRGame/app/src/main/java/com/example/qrgame/LatlngSearch.java b/code/QRGame/app/src/main/java/com/example/qrgame/LatlngSearch.java
new file mode 100644
--- /dev/null	(date 1680253354451)
+++ b/code/QRGame/app/src/main/java/com/example/qrgame/LatlngSearch.java	(date 1680253354451)
@@ -0,0 +1,112 @@
+
+package com.example.qrgame;
+
+import static androidx.camera.core.impl.utils.ContextUtil.getApplicationContext;
+import static androidx.camera.core.impl.utils.ContextUtil.getBaseContext;
+
+import android.annotation.SuppressLint;
+import android.app.Activity;
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.DialogFragment;
+
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.database.ChildEventListener;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.google.firebase.firestore.CollectionReference;
+import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.GeoPoint;
+import com.google.firebase.firestore.QueryDocumentSnapshot;
+import com.google.firebase.firestore.QuerySnapshot;
+
+public class LatlngSearch extends DialogFragment {
+
+
+    private Context mContext;
+    FirebaseFirestore firebaseDatabase;
+    private String value;
+    private int count;
+
+    @SuppressLint("MissingInflatedId")
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {
+        mContext = getContext();
+        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
+        firebaseDatabase = FirebaseFirestore.getInstance();
+        CollectionReference test_value = firebaseDatabase.collection("qrCodes");
+        View view = LayoutInflater.from(getContext()).inflate(R.layout.latlngsearch, null);
+        EditText la = view.findViewById(R.id.latitude);
+        EditText lo = view.findViewById(R.id.longitude);
+        return builder
+                .setView(view)
+                .setTitle("Search QRCode by Latlng")
+                .setNegativeButton("Cancel", null)
+                .setPositiveButton("Search", (dialog, which) -> {
+                    Double lat1 = Double.valueOf(la.getText().toString());
+                    Double lot1 = Double.valueOf(lo.getText().toString());
+                    count = 0;
+                    test_value
+                            .get()
+                            .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                                @SuppressLint("RestrictedApi")
+                                @Override
+                                public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                                    if (task.isSuccessful()) {
+                                        for (DocumentSnapshot document : task.getResult().getDocuments()) {
+                                            String test = "test";//"(String) document.get("latLng");""
+                                            test += document.get("latLng");
+                                            String[] temp;
+                                            String[] temp1;
+                                            String[] lat;
+                                            String lot;
+                                            String delimeter = "=";
+                                            String delimeter1 = ",";
+                                            temp = test.split(delimeter);
+                                            temp1 = temp[1].split(delimeter1);
+                                            lat = temp1[0].split(",");
+                                            String lata = lat[0];
+                                            lot = temp[2].substring(0,temp[2].length()-1);
+                                            if((Double.valueOf(lata) - lat1) < 1 ){
+                                                if((Double.valueOf(lot) - lot1) < 1){
+                                                    count += 1;
+                                                }
+
+                                            }
+                                            value = document.getString("name");
+                                            value += " location: ";
+                                        }
+                                        //value += document.getString("location_test_string");
+                                        Toast.makeText(mContext, "There are "+String.valueOf(count)+" Qrcodes near this location", Toast.LENGTH_SHORT).show();
+                                    }
+                                }
+
+//                            });
+
+                            });
+
+                })
+                .create();
+    }
+}
Index: code/QRGame/app/src/main/res/layout/latlngsearch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/code/QRGame/app/src/main/res/layout/latlngsearch.xml b/code/QRGame/app/src/main/res/layout/latlngsearch.xml
new file mode 100644
--- /dev/null	(date 1680246688425)
+++ b/code/QRGame/app/src/main/res/layout/latlngsearch.xml	(date 1680246688425)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <EditText
+        android:id="@+id/latitude"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:ems="10"
+        android:inputType="number|numberDecimal"
+        android:hint="latitude" />
+    <EditText
+        android:id="@+id/longitude"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:ems="10"
+        android:inputType="number|numberDecimal"
+        android:hint="longitude" />
+
+
+</LinearLayout>
\ No newline at end of file
